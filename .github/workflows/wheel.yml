name: Wheel

on:
  workflow_dispatch:

env:
  Python_Version: 3.9

jobs:
  wheel:
    name: Build wheels macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{env.Python_Version}}
      - name: Python Cache Key
        shell: bash
        run: |
          echo $(which python) > /tmp/python_version.txt
      - name: Get pip cache dir
        shell: bash
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
           path: ${{ steps.pip-cache.outputs.dir }}
           key: ${{ runner.os }}-pip-${{ hashFiles('/tmp/python_version.txt') }}
           restore-keys: |
              ${{ runner.os }}-pip-
      - name: Update
        run: | 
         pip install --upgrade pip wheel setuptools build
      - name: Install Dep
        run: | 
         pip install delocate
      - name: Update Homebrew
        run: |
          #brew update --preinstall
          cat "$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/foo.rb" > /tmp/brew-formulae
      - name: Configure Homebrew cache
        uses: actions/cache@v2
        with:
          path: |
            ~/Library/Caches/Homebrew
            ~/Library/Caches/Homebrew/downloads
          key: brew-${{ hashFiles('/tmp/brew-formulae') }}
          restore-keys: brew-- 
      - name: Install libomp
        run: |
         env HOMEBREW_NO_AUTO_UPDATE=1 brew install libomp
      - name: Download OpenJij
        run: |
         mkdir wheel
         pip wheel --no-deps --wheel-dir wheel openjij 
      - name: Show
        run: |
          du -a ./wheel
      - name: Wheel Name
        working-directory: wheel
        id: wheel
        run: |
          for f in *.whl; do echo "::set-output name=wheel::$f"; done
      - name: Unpack 
        run: | 
          mkdir ./unpack
          python -m wheel unpack --dest-dir=./unpack ./${{steps.wheel.outputs.wheel}} 
          du -a ./unpack
